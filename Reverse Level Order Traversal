vector<int> reverseLevelOrder(Node *root)
{
    // code here
        if (!root)
            return {};
        vector<vector<int>> res;
        queue<Node*> q;
        q.push(root);
        while (!q.empty()) {
            int n = q.size();
            vector<int> temp;
            for (int i = 0; i < n; i++) {
                Node* node = q.front();
                q.pop();
                temp.push_back(node->data);
                if (node->left)
                    q.push(node->left);
                if (node->right)
                    q.push(node->right);
            }
            res.push_back(temp);
        }
        vector<int> ans;
        for(int i = res.size() - 1; i >= 0; --i){
            for(auto x : res[i])
                ans.push_back(x);
        }
        return ans;
}
