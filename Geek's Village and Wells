class Solution{
public:
    vector<vector<int>> chefAndWells(int n,int m,vector<vector<char>> &c)
    {
        vector<vector<int>>ans(n,vector<int>(m,-1 ));
        vector<vector<bool>>visited(n,vector<bool>(m,false));
        int delRow[4]={-1,0,1,0};
        int delCol[4]={0,1,0,-1};
        queue<pair<int,pair<int,int>>>q;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(c[i][j]=='W')
                {
                    q.push({0,{i,j}});
                    visited[i][j]=true;
                    ans[i][j]=0;
                }
                else if(c[i][j]=='N' || c[i][j]=='.')
                {
                    ans[i][j]=0; 
                }
            }
        }
        
        while(!q.empty())
        {
            int dis=q.front().first;
            int R=q.front().second.first;
            int C=q.front().second.second;
            q.pop();
            
            for(int i=0;i<4;i++)
            {
                int nrow=R+delRow[i];
                int ncol=C+delCol[i];
                if((nrow>=0 && nrow<n) && (ncol>=0 && ncol<m) && !visited[nrow][ncol])
                {
                    visited[nrow][ncol]=true;
                    if(c[nrow][ncol]=='H')
                    {
                        q.push({dis+1,{nrow,ncol}});
                        ans[nrow][ncol]=(dis+1)*2;
                    }
                    else if(c[nrow][ncol]=='.')
                    {
                        q.push({dis+1,{nrow,ncol}});
                    }
                }
            }
        }
        return ans;
    }
};
