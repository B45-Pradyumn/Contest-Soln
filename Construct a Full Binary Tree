class Solution {
   public Node constructBTree(int pre[], int preM[], int size)
    {
        // your code here
        Node root = recurs(pre , preM , 0 , pre.length-1 , 0 , preM.length-1);
        return root ;
    }
    public Node recurs(int pre[], int preM[], int prs , int pree , int pos , int poe){
        if(pree < prs)return null ;
        
        Node node = new Node(pre[prs++]) ;
        int i = pos + 1 ;
        int count = 0 ;
        while(i < poe){
            if(preM[i] == pre[prs])break ;
            i++ ;
            count++ ;
        }
        // left part in right and right part in left
        node.left = recurs(pre , preM , prs , prs+count-1 , i , poe);
        
        node.right = recurs(pre , preM , prs+count , pree , pos+1 , i-1);
        return node ;
    }
}
