 Node* build(int postorder[], int inorder[], int ps, int pe, int is, int ie){
        if(is>ie)
        return nullptr;
        Node* node= new Node(postorder[pe]);
      
        int i=is;
        while(inorder[i]!=postorder[pe]){
           i++;
        }
        int length = i-is;

        node->left   = build(postorder, inorder, ps,ps+length-1,is,i-1);
        node->right  = build(postorder,inorder, ps+length, pe-1, i+1,ie);
        return node;
    }
    //Function to return a tree created from postorder and inoreder traversals.
    Node *buildTree(int in[], int post[], int n) {
        return build(post,in,0,n-1,0,n-1);
    }
