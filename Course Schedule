public:
    vector<int> findOrder(int n, int m, vector<vector<int>> prerequisites) 
    {
        //code here
        vector<int>deg(n,0);
        vector<vector<int>>G(n);
        for(int i = 0; i < m; i++){
            int u = prerequisites[i][0], v = prerequisites[i][1];
            G[v].push_back(u);
            deg[u]++;
        }
        vector<int>ans;
        queue<int>q;
        for(int i = 0; i < n; i++){
            if(!deg[i]){
                q.push(i);
            }
        }
        vector<bool>visited(n,false);
        while(!q.empty()){
            int u = q.front(); q.pop();
            visited[u] = true;
            ans.push_back(u);
            for(auto v : G[u]){
                deg[v]--;
                if(!deg[v]){
                    q.push(v);
                }
            }
        }
        for(int i = 0; i < n; i++){
            if(!visited[i]){
                return {};
            }
        }
        return ans;
    }
