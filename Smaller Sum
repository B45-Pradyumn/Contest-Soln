class Solution
{
    public long[] smallerSum(int n,int arr[])
    {
        HashMap<Integer,Long>h=new HashMap<>();
        HashMap<Integer,Long>h1=new HashMap<>();
        long[] a=new long[n];
        int[] b=new int[n];
        long sum=0;
        for(int i=0;i<n;i++)
        {
            b[i]=arr[i];
        }
        Arrays.sort(arr);
        for(int i=0;i<n;i++)
        {
         if(h1.containsKey(arr[i]))
                {
                    h1.put(arr[i],h1.get(arr[i])+1);
                }
                else
                {
                    h1.put(arr[i],(long)1);
                }
        }
        for(int i=0;i<n;i++)
        {
            if(i==0)
            {
                h.put(arr[i],sum);
            }
            else if(i>=1)
            {
                if(arr[i]>arr[i-1])
                {
                sum=sum+(arr[i-1]*h1.get(arr[i-1]));    
                h.put(arr[i],sum);
                }
                else if(arr[i]==arr[i-1])
                {
                    h.put(arr[i],sum);
                }
            }
        }
        for(int i=0;i<n;i++)
        {
            a[i]=h.get(b[i]);
        }
        return a;
    }
}
