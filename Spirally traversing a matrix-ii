public:
    vector<int> spirallyTraverse(vector<vector<int> > &mat) {
        // code here

vector<int> ans;
        int row = mat.size();
        int col = mat[0].size();
        
        int count = 0;
        int total = row*col;
        
        
        // index initialization
        int startingRow = 0;
        int endingRow = row-1;
        int startingCol = 0;
        int endingCol = col-1;
        
        while(count < total){
            // print starting row
            for(int i= startingCol; count < total && i <= endingCol; i++){
                ans.push_back(mat[startingRow][i]);
                count++;
            }
            startingRow++;
            
            // print ending column
            for(int i= startingRow; count < total && i <= endingRow; i++){
                ans.push_back(mat[i][endingCol]);
                count++;
            }
            endingCol--;
            
            // print ending row
            for(int i= endingCol; count < total && i >= startingCol; i--){
                ans.push_back(mat[endingRow][i]);
                count++;
            }
            endingRow--;
            
            // print starting column
            for(int i= endingRow; count < total && i >= startingRow; i--){
                ans.push_back(mat[i][startingCol]);
                count++;
            }
            startingCol++;
        }
        return ans;
    }
