public:
    int firstOccur(vector<int>&a,int target){
        int n=a.size();
        int l=0,r=n-1;
        int ans=n;
        while(l<=r){
            int mid=l+(r-l)/2;
            if(a[mid]==target){
                ans=min(ans,mid);
                r=mid-1;
            }
            else if(a[mid]>target){
                r=mid-1;
            }
            else l=mid+1;
        }
        if(ans==n) return -1;
        return ans;
    }
    int lastOccur(vector<int>&a,int target){
        int n=a.size();
        int l=0,r=n-1;
        int ans=-1;
        while(l<=r){
            int mid=l+(r-l)/2;
            if(a[mid]==target){
                ans=max(ans,mid);
                l=mid+1;
            }
            else if(a[mid]>target){
                r=mid-1;
            }
            else l=mid+1;
        }
        return ans;
    }
    int countFreq(vector<int>& a, int target) {
        int idx1=firstOccur(a,target);
        if(idx1==-1) return 0;
        int idx2=lastOccur(a,target);
        return idx2-idx1+1;
    }
