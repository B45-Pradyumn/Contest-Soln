 public static int maxProfit(int n, int[] arr) {
        // code here
        int[][] dp = new int[arr.length][5];
        dp[arr.length - 1][1] = arr[arr.length - 1];
        dp[arr.length - 1][3] = arr[arr.length - 1];
        for(int index = arr.length - 2; index >= 0; index--){
            for(int buy = 3; buy >= 0; buy--){
                int take = 0, notake = 0;
                if(buy == 0 || buy == 2){
                    take = -arr[index] + dp[index + 1][buy + 1];
                }
                if(buy == 1 || buy == 3){
                    take = arr[index] + dp[index + 1][buy + 1];
                }
                notake = dp[index + 1][buy];
                dp[index][buy] = Math.max(take, notake);
            }
        }
        return dp[0][0];
    }
